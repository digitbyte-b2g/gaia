const TelephonyManager={_observers:[],_observersArray:[],_callState:null,connected:!1,initFlag:!1,init(){this.initFlag||(this.initFlag=!0,window.addEventListener("session-disconnected",()=>{this.connected=!1}),window.addEventListener("services-load-complete",()=>{this.connected||(this.connected=!0,this.processPendingRequest())}))},setCallState(e){this.connected?(window.api.telephonymanager.callState=e,this._callState=null):this._callState=e},getCallState(){return taskScheduler.request({serverName:taskScheduler.TELEPHONY,funcName(){return new Promise((t,n)=>{window.api.telephonymanager.callState.then(e=>{t(e)},e=>{n(e)})})}})},observeCallStateChange(e){this.connected&&window.api.telephonymanager.addEventListener(window.api.telephonymanager.CALLSTATE_CHANGE_EVENT,e),this._observersArray.push(e)},unobserveCallStateChange(a){if(this.connected){window.api.telephonymanager.removeEventListener(window.api.telephonymanager.CALLSTATE_CHANGE_EVENT,a);let n=!1;this._observersArray.forEach((e,t)=>{n||e!==a||(this._observersArray.splice(t,1),n=!0)})}},processPendingRequest(){this._callState&&this.setCallState(this._callState),this._observersArray.forEach(e=>{this.connected&&window.api.telephonymanager.addEventListener(window.api.telephonymanager.CALLSTATE_CHANGE_EVENT,e)})}};TelephonyManager.init(),window.TelephonyManager=TelephonyManager;