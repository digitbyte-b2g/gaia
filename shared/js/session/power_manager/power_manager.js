const PowerManager={_powerOff:!1,_reboot:!1,_factoryReset:void 0,_screenEnabled:void 0,_extScreenEnabled:void 0,_keyLightEnabled:void 0,_screenBrightness:void 0,_extScreenBrightness:void 0,_keyLightBrightness:void 0,_cpuSleepAllowed:void 0,connected:!1,initFlag:!1,_extScreenEnabledState:!1,init(){this.initFlag||(this.initFlag=!0,window.addEventListener("session-disconnected",()=>{this.connected=!1}),window.addEventListener("services-load-complete",()=>{this.connected||(this.connected=!0,this.processPendingRequest())}))},getExtScreenState(){return this._extScreenEnabledState},powerOff(){this.connected?(this._powerOff=!1,window.api.powermanager.powerOff()):this._powerOff=!0},reboot(){this.connected?(this._reboot=!1,window.api.powermanager.reboot()):this._reboot=!0},setFactoryReset(e){this.connected?(window.api.powermanager.factoryReset=e,this._factoryReset=void 0):this._factoryReset=e},setScreenEnabled(e){this.connected?(window.api.powermanager.screenEnabled=e,this._screenEnabled=void 0):this._screenEnabled=e},setExtScreenEnabled(e){this.connected?(window.api.powermanager.extScreenEnabled=e,this._extScreenEnabled=void 0):this._extScreenEnabled=e,this._extScreenEnabledState=e},setKeyLightEnabled(e){this.connected?(window.api.powermanager.keyLightEnabled=e,this._keyLightEnabled=void 0):this._keyLightEnabled=e},setScreenBrightness(e){this.connected?(window.api.powermanager.screenBrightness=e,this._screenBrightness=void 0):this._screenBrightness=e},setExtScreenBrightness(e){this.connected?(window.api.powermanager.extScreenBrightness=e,this._extScreenBrightness=void 0):this._extScreenBrightness=e},setKeyLightBrightness(e){this.connected?(window.api.powermanager.keyLightBrightness=e,this._keyLightBrightness=void 0):this._keyLightBrightness=e},setCpuSleepAllowed(e){this.connected?(window.api.powermanager.cpuSleepAllowed=e,this._cpuSleepAllowed=void 0):this._cpuSleepAllowed=e},getFactoryResetReason(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.factoryReset.then(e=>{t(e)},e=>{n(e)})})}})},getScreenEnabled(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.screenEnabled.then(e=>{t(e)},e=>{n(e)})})}})},getExtScreenEnabled(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.extScreenEnabled.then(e=>{t(e)},e=>{n(e)})})}})},getKeyLightEnabled(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.keyLightEnabled.then(e=>{t(e)},e=>{n(e)})})}})},getScreenBrightness(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.screenBrightness.then(e=>{t(e)},e=>{n(e)})})}})},getExtScreenBrightness(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.extScreenBrightness.then(e=>{t(e)},e=>{n(e)})})}})},getKeyLightBrightness(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.keyLightBrightness.then(e=>{t(e)},e=>{n(e)})})}})},getCpuSleepAllowed(){return taskScheduler.request({serverName:taskScheduler.POWER,funcName(){return new Promise((t,n)=>{window.api.powermanager.cpuSleepAllowed.then(e=>{t(e)},e=>{n(e)})})}})},processPendingRequest(){this._powerOff&&this.powerOff(),this._reboot&&this.reboot(),void 0!==this._screenEnabled&&this.setScreenEnabled(this._screenEnabled),void 0!==this._extScreenEnabled&&this.setExtScreenEnabled(this._extScreenEnabled),void 0!==this._keyLightEnabled&&this.setKeyLightEnabled(this._keyLightEnabled),void 0!==this._screenBrightness&&this.setScreenBrightness(this._screenBrightness),void 0!==this._extScreenBrightness&&this.setExtScreenBrightness(this._extScreenBrightness),void 0!==this._keyLightBrightness&&this.setKeyLightBrightness(this._keyLightBrightness),void 0!==this._cpuSleepAllowed&&this.setCpuSleepAllowed(this._cpuSleepAllowed),void 0!==this._factoryReset&&this.setFactoryReset(this._factoryReset)}};PowerManager.init(),window.PowerManager=PowerManager;